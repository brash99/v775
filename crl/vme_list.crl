#  Source for generic VME readout using a
#  TJNAF trigger supervisor interface register (TIR)
#  as a source for external interrupts
#
#    David Abbott, TJNAF 1996

readout list VME1
maximum 1024,500
vme readout
ts control

const TIR_ADDR = 0x0ed0
const TDC_ID = 0
const MAX_TDC_DATA = 34

unsigned long laddr;
extern int bigendian_out;

begin download

  variable res

# If the ROC is sending data to Little-Endian EB
# e.g. a x86 Linux CPU then bigendian_out = 0.
# Unless the ROC is also running on a Little-Endian
# machine. Then set bigendian_out=1.
  bigendian_out = 0;


# Setup TIR
  tirInit(TIR_ADDR);

  c775Init(0x110000,0,1,0); /* A24 = 0x11, A32 = 0x0A11 */

  log inform "User Download Executed"

end download
    
begin prestart

  log inform "Entering User Prestart"

  init trig source VME
  link async trig source VME 1 to usrtrig and usrtrig_done
  event type 1 then read VME 1

%%
{
  /* Setup TDCs (no sparcification, enable berr for block reads) */
  c775Clear(TDC_ID);
  c775DisableBerr(TDC_ID);
  /*   c775EnableBerr(TDC_ID); /\* for 32bit block transfer *\/ */
  c775CommonStop(TDC_ID);
  
  c775Status(TDC_ID,0,0);
}
%%

  log inform "User Prestart Executed"

end prestart

begin end

  CDODISABLE(VME,1,0);

%%
{
  c775Status(TDC_ID,0,0);
  
  c775Disable(TDC_ID);
}
%%
  log inform "User End Executed"

end end

begin pause

  CDODISABLE(VME,1,0);

  log inform "User Pause Executed"

end pause

begin go
  
  log inform "Entering User Go"

%%
{
  c775Enable(TDC_ID);
}
%%

  CDOENABLE(VME,1,0);

end go

begin trigger usrtrig
 
 variable event_ty, event_no, itimeout, nwords, stat

 event_ty = EVTYPE;
 event_no = *rol->nevents;

 rol->dabufp = (long *) 0;
 open event type EVTYPE of BT_UI4

%%
{
  while(itimeout<1000)
    {
      itimeout++;
      stat = c775Dready(TDC_ID);
      if(stat>0) break;
    }
  if(stat > 0) 
    {
      nwords = c775ReadEvent(TDC_ID, rol->dabufp);
      /* or use c775ReadBlock, if BERR was enabled */
      /* 	  nwords = c775ReadBlock(TDC_ID,dma_dabufp,MAX_TDC_DATA); */
      if(nwords<=0) 
	{
	  logMsg("ERROR: TDC Read Failed - Stat 0x%x\n",nwords,0,0,0,0,0);
	  *rol->dabufp++ = 0xda000bad;
	  c775Clear(TDC_ID);
	} 
      else 
	{
	  rol->dabufp += nwords;
	}
    }
  else
    {
      logMsg("ERROR: NO data in TDC  datascan = 0x%x, itimeout=%d\n",
	     stat,itimeout,0,0,0,0);
      c775Clear(TDC_ID);
    }
}
%%
  
 close event

end trigger

begin done usrtrig

end done


begin done

# Acknowledge tir register
  CDOACK(VME,1,0);

end done

begin status

end status


